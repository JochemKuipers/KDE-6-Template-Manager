name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up variables
      id: vars
      run: |
        echo "GITHUB_REF: $GITHUB_REF"
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo "TAG_NAME from tag: $TAG_NAME"
        else
          TAG_NAME="v$(date +%Y.%m.%d)"
          echo "TAG_NAME generated: $TAG_NAME"
        fi
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
        
    - name: Create archive
      run: |
        echo "TAG_NAME from env: $TAG_NAME"
        # Create a clean directory for the release
        mkdir -p release-build
        
        # Copy important files only (exclude test scripts)
        cp install.sh uninstall.sh TemplateCreator.sh TemplateEditor.sh TemplateEraser.sh TemplateManagerLocalization.sh TemplateManagerTools.sh release-build/
        cp *.desktop release-build/
        cp *.png release-build/
        cp README.md release-build/
        cp LICENSE release-build/
        
        # Copy screenshots directory if it exists
        if [ -d "screenshots" ]; then
          cp -r screenshots release-build/
        fi
        
        # Create tar.gz archive
        tar -czf "KDE-6-Template-Manager-${TAG_NAME}.tar.gz" -C release-build .
        
        # Display archive contents
        echo "Archive contents:"
        tar -tzf "KDE-6-Template-Manager-${TAG_NAME}.tar.gz"
        
        # Set output for next step
        echo "ARCHIVE_NAME=KDE-6-Template-Manager-${TAG_NAME}.tar.gz" >> $GITHUB_ENV
        echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
        
    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: KDE 6 Template Manager ${{ env.TAG_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ## KDE 6 Template Manager ${{ env.TAG_NAME }}

          ### Changelog
          ${{ github.event.head_commit.message }}
          
        files: ${{ env.ARCHIVE_NAME }}
        draft: false
        prerelease: false
        
    - name: Cleanup
      run: |
        rm -rf release-build
        rm -f "KDE-6-Template-Manager-${TAG_NAME}.tar.gz"
